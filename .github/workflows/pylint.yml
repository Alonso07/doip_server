name: Pylint

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.1.1
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Setup Poetry (Windows)
      if: runner.os == 'Windows'
      uses: ./.github/actions/setup-poetry-windows

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies (Unix)
      if: runner.os != 'Windows'
      shell: bash
      run: poetry install --no-interaction --no-root

    - name: Install dependencies (Windows)
      if: runner.os == 'Windows'
      uses: ./.github/actions/run-poetry-windows
      with:
        command: 'install --no-interaction --no-root'

    - name: Analysing the code with pylint (Unix)
      if: runner.os != 'Windows'
      shell: bash
      run: |
        poetry run pylint $(git ls-files '*.py') --fail-under=8.5

    - name: Analysing the code with pylint (Windows)
      if: runner.os == 'Windows'
      uses: ./.github/actions/run-poetry-windows
      with:
        command: 'run pylint $(git ls-files *.py) --fail-under=8.5'
